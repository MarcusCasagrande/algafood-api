#arquivo criado em charset 8859-1, mas projeto usa UTF-8 por padrao, para consertar:
# Intellij: ctrl+alt+S -> Editor -> File Encodings -> properties files: mudar para UTF-8



#NotBlank.restaurante.nome=Nome do restaurante é obrigatório.
#NotBlank.cozinha.nome=Nome da cozinha é obrigatório.

# por padrao, propriedade vai aparecer em {0}
NotBlank={0} é obrigatório
NotNull={0} é obrigatório
Multiplo={0} deve ser um valor múltiplo de {1}
# Testa as propriedades pra ver o que sai: {0} - {1} - {2} - {3}... nesse caso {0} nao tem nada, pois seria o nome da propriedade (field da classe restaurante), que nesse tipo de anotacao nao tem, pois é de classe. {1}, {2}, {3} sao os argumentos da anotacao na classe Restuarante
ValorZeroIncluiDescricao={1} deve conter {2}, o 3 era o que mesmo?...: {3}
#javax.validation.constraints.PositiveOrZero.message=deve ser um número positivo
TaxaFrete.invalida={0} está inválido
#PositiveOrZero= Valor {0} não pode ser negativo
# define que toda propriedade "nome" (tipo Cozinha.nome) vai ser "Nome" em {0}
#nome=Caraaaca
#quanto mais específico, maior prioridade



# Restaurante
NotNull.restauranteInput.taxaFrete={0} é obrigatória
NotNull.restauranteInput.cozinha={0} é obrigatória
restauranteInput.cozinha=Cozinha do restaurante
restauranteInput.nome=Nome do restaurante
restauranteInput.taxaFrete=Taxa de frete do restaurante
restaurante.id=Código do restaurante

# Cozinha
cozinhaInput.id=Código da cozinha
cozinhaInput.nome=Nome da cozinha

# Cidade
cidadeInput.nome=Nome da cidade
cidadeInput.estado=Estado da cidade

# Estado
estadoInput.nome=Nome do estado
estadoInput.id=Código do estado

#FormaPagamento
NotBlank.formaPagamentoInput.descricao={0} é obrigatória
formaPagamentoInput.id=Código da forma de pagamento
formaPagamentoInput.descricao=Descrição da forma de pagamento
formaPagamento.id=Código da forma de pagamento

#Endereco
endereco=Endereço
endereco.logradouro=Logradouro
endereco.numero=Número do logradouro
endereco.cidade=Cidade
endereco.cidade.id=Código da cidade
endereco.cep=CEP
endereco.bairro=Bairro

#Grupo
NotBlank.grupoInput.nome={0} é obrigatório
grupoInput.id=Código do grupo
grupoInput.nome=Descrição do grupo

#Usuario
Email=Formato de e-mail inválido
NotBlank.usuarioInput={0} é obrigatório
NotBlank.usuarioComSenhaInput={0} é obrigatório
usuarioInput.nome=Nome do usuário
usuarioInput.email=E-mail do usuário
usuarioComSenhaInput.nome=Nome do usuário
usuarioComSenhaInput.email=E-mail do usuário
usuarioComSenhaInput.senha=Senha do usuário

#Produto
NotBlank.produtoInput={0} é obrigatório
produtoInput.nome=Nome do produto
produtoInput.descricao=Descrição do produto
produtoInput.preco=Preço do produto
produtoInput.ativo=Status do produto

#Pedido
NotNull.pedidoInput.itens.produtoId=Código do produto no item é obrigatório
NotNull.pedidoInput.itens.quantidade=Quantidade no item é obrigatório
Size.pedidoInput.itens=O pedido deve ter pelo menos um item
pedidoInput.restaurante=Restaurante
pedidoInput.formaPagamento=Forma de pagamento
pedidoInput.enderecoEntrega=Endereço de entrega
pedidoInput.itens=Itens do pedido
enderecoEntrega.logradouro=Logradouro do endereço de entrega
enderecoEntrega.numero=Número do logradouro do endereço de entrega
enderecoEntrega.cidade=Cidade do endereço de entrega
enderecoEntrega.cidade.id=Código da cidade do endereço de entrega
enderecoEntrega.cep=CEP do endereço de entrega
enderecoEntrega.bairro=Bairro do endereço de entrega

# Pedido Filter:

#sempre que tiver problema de convrsao de String pra OffsetDateTime (aconteceu no metodo listar() do PedidoController). Foi observado essa prop no handler no stacktrace da API)
typeMismatch.java.time.OffsetDateTime={0} deve ser uma data/hora válida
typeMismatch.java.lang.Long={0} deve ser um número válido
# (ver sessao "codes" no stacktrace para achar tais props aqui descritas)
pedidoFilter.dataCriacaoInicio=Data inicial de criação do pedido
pedidoFilter.dataCriacaoFim=Data final de criação do pedido
pedidoFilter.clienteId=Código do cliente
pedidoFilter.restauranteId=Código do restaurante

vendaDiariaFilter.dataCriacaoInicio=Data inicial de criação de pedido
vendaDiariaFilter.dataCriacaoFim=Data final de criação de pedido
vendaDiariaFilter.restauranteId=Código do restaurante

# Foto Produto
fotoProdutoInput.arquivo=Arquivo da foto
fotoProdutoInput.descricao=Descrição da foto
FileSize.fotoProdutoInput.arquivo=A foto deve ter um tamanho máximo de {1}
FileContentType.fotoProdutoInput.arquivo=A foto deve ser do tipo JPG ou PNG

#23.44 scopes (11:30). Ver no arquivo approval.html.old
scope.READ=Acesso de leitura
scope.WRITE=Acesso de escrita




